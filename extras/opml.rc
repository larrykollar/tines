# OPML-centric configuration file for Tines
#
# use a tab-spacing of 4 when editing this file, or edit it through
# tines with "tines -a opml.rc" to take advantage of the indentation in it
#

##### default file & format
	format "opml"
	default_db_file "Untitled.opml"
	
##### bullets
	# what kind of bullets are displayed before each item
	bullet_leaf            "  *"
	bullet_parent          "  +"
	bullet_parent_expanded "  -"
	bullet_todo_leaf_undone   "[ ]"
	bullet_todo_leaf_done     "[X]"
	bullet_todo_parent_undone "< >"
	bullet_todo_parent_done   "<X>"
	bullet_textleaf           "t *"
	bullet_textparent         "t +"
	bullet_textparent_expanded "t -"
	
##### user interface
	display_format "i4- d"
		
	##### fixed focus
		# If 1, lock the selection bar to a position 1/3 down the screen
		fixedfocus "0"
		
	##### movement restrictions
		# To restrict up/down movements to a single level,
		# set these variables to 0.
		forced_up 1
		forced_down 1
	
	##### automatically added nodes
		# To put automatically added nodes at the top of the current level,
		# set this variable to 1.
		add_at_top 0
	
##### external commands
	##### http:// handler
		# what command is executed when a user wants a action performed on a
		# entry containing an URL
		# 
		# * is substituted for the URL
		#
		# the X ones have their error and standard output redirected to dev/null
		# and are put into the background to keep Tines running afterwards
		##### samples
			#web_command "opera -remote 'openURL(*)'		> /dev/null 2>&1 &"
			#web_command "netscape -remote 'openURL(*)'		> /dev/null 2>&1 &"
			#web_command "netscape -remote 'openURL(*,new-window)'	> /dev/null 2>&1 &"
			#web_command "mozilla -remote 'openURL(*)'		> /dev/null 2>&1 &"
			#web_command "mozilla -remote 'openURL(*,new-window)'	> /dev/null 2>&1 &"
			#web_command "konqueror *				> /dev/null 2>&1 &"
			#web_command "galeon -n					> /dev/null 2>&1 &"
			#web_command "w3m *"
			#web_command "lynx *"
			#web_commend "rxvt -fn fixed -rv +sb -e w3m *		> /dev/null 2>&1 &"
			#web_command "opera -remote 'openURL(*,new-window)'	> /dev/null 2>&1 &"
			#web_command "links *"
		web_command "open *"
		
	##### mail@handler
		# what command is executed when a user wants a action performed on a
		# entry containing a mail-address
		# 
		# * is substituted for the mail-address
		#
		## samples
			#mail_command "xterm -rv pine *				> /dev/null 2>&1 &"
			#mail_command "xterm -rv +sb -e mutt *			> /dev/null 2>&1 &"
			#mail_command "pine *"
			#mail_command "mutt *"
		mail_command "open mailto:*"
		
	##### spell checking
		# the spell-checker used
		#
		## samples
			#spell_command "aspell -c"
			#spell_command "ispell -x"
			#spell_command "ispell -x -damerican"
			#spell_command "ispell -x -dbritish"
			#spell_command "ispell -x -dbokm√•l"
			#spell_command "ispell -x -dnynorsk"
		spell_command "ispell -x"
		
	##### Remember current position in tree
		# whether tines remembers the current position in a file
		# (currently supported by the tines DTD only, but might
		# easily be extended since it fakes it with a XML comment)
		# 1=true 0=false
		savepos	"1"
		
	##### XML format
		##### XML Cuddling
			# When loading xml files, set to 1 to allow data on 
			# the same line as tags.
			xml_cuddle "1"

	##### Autosave
		# when nodes_changed reaches above threshold, invoke autosave
		autosave_threshold "15"
		autosave_threshold_nodes_changed "0"
	
		# if change has occured but is less than threshold, save when number
		# of "ticks"/keypresses, invoke autosave
		autosave_timeout    "50"
		autosave_timer     "0"
	
##### Color/style
	# color scheme configuration, syntax is:
	# "style <item>  <foreground/background> <attribute,[attribute]>"
	# legal items are shown below
	# colors are: blue, cyan, green, red, magenta, yellow, black and white
	# attributes are: normal, reverse, bold, underline
	
	macro define 'style_standard'
		style menuitem       default/default reverse
		style menutext       cyan/default    normal
		style parentnode     green/default   bold
		style node           green/default   normal
		style bullet         cyan/default    normal
		style selected       green/default   reverse
		style parentselected green/default   reverse,bold
		style background     default/default normal
		end
	macro define 'style_white_bg'
		style menuitem       red/white normal
		style menutext       black/white    normal
		style parentnode     default/default bold
		style node           default/default normal
		style bullet         yellow/default    normal
		style selected       yellow/blue      normal
		style parentselected yellow/blue      bold
		style background     default/default normal
		end
	
	# macro style_standard
	macro style_white_bg
##### key-bindings
	#
	# syntax: 
	#   "bind <scope[,scope[...]]>  <key>   <action>"
	#
	# multiple actions can be chained together by using the virtual key ".."
	# as the following key-binding
	#
	##################################################
	
	context main
		helptext "ESC| Menu || |^S| Save || |F3| Text || |^N| Edit note || |F5| Commandline || |return| Edit |
		bind f1 'status "See /usr/local/share/tines/opml.rc to check out the configuration."'
		bind .. 'status "The RC file also provides details about the available keybindings."'
		bind .. 'status "Please feel free to contribute more useful keybindings and help text."'
		
		bind esc menu
		bind ^Q 'context quitsave'
		
		bind f3 'toggle_text'
		bind f5 'commandline'
		bind .. 'status --clear'
		
		bind f6 'macro m_spellcheck'
			macro define m_spellcheck
				context spellcheck
				save_state
				spell
			end
		
		bind ^E 'context export'
		bind ^L 'context import'
		bind ^F 'macro m_search'
			macro define m_search
				context search
				save_state
				getquery "enter keyword to search for"
				search -f "$query"
			end
		
		bind f9  menu
		bind f10 'context user'
		
		bind ^G 'context grab'
		bind .. 'save_state'
		
		bind ^A 'action'
		bind up    up
		bind down  down
		bind left  left
		bind right right
		bind npage pagedown
		bind ppage pageup
		bind home  "go root"
		
		bind return edit
		bind del    remove
		
		bind ins    insert_below
		bind .. edit
		
		bind ^O     insert_below
		bind .. edit
		
		# temporary kludge until we implement insert_above
		bind ^B insert_below
		bind .. "movenode up"
		bind .. edit
		
		bind tab complete
		bind ^T  toggle_todo
		bind ^D  toggle_done
		bind >   indent
		bind <   outdent
		bind f2  save
		bind ^S  save
		bind ^N  "macro edit_note"
		
		bind ^X save_state
		bind .. cut
		
		bind ^C copy
		
		bind ^V paste
		bind .. down
		
		bind backspace	backspace
		bind backspace2	backspace
		
		bind sleft "movenode left"
		bind sright	 "movenode right"
		bind sprevious "movenode up"
		bind snext "movenode down"
		
		bind + expand
		bind - collapse
		
		bind ^Z stop
		
	context nodeedit
		helptext "Editing node:|  |ESC| revert || |return| confirm"
		bind up    up
		bind down  down
		bind left  left
		bind right right
		
		bind return  confirm
		bind esc     cancel
		
		bind ^S  split
		bind ^J  join
		
		bind backspace  backspace
		bind backspace2 backspace
		
		bind ^A   bol
		bind home bol
		bind ^E   eol
		bind end  eol
		bind ^B   bskipword
		bind ^W   skipword
		
		bind del  delete
		
	context lineedit
		helptext lineedit
		
		bind up      up
		bind down    down
		bind left    left
		bind right   right
		
		bind return  confirm
		bind esc     cancel
		bind tab     complete
		
		bind backspace backspace
		bind backspace2 backspace
		bind del        delete
		
		bind ^A   bol
		bind home bol
		bind ^E   eol
		bind end  eol
		bind ^B   bskipword
		bind ^W   skipword
		
	context confirm
		helptext " y | | j | |return| confirm || |any key| cancel"
		
		bind y      confirm
		bind j      confirm
		bind return confirm
		
		bind any    cancel
		
	context quitsave
		helptext "Save on exit?|    | Y |es | J |a || | N |o || |ESC| cancel"
		bind Y  save
		bind .. quit
		
		bind y  save
		bind .. quit
		
		bind J  save
		bind .. quit
		
		bind j  save
		bind .. quit
		
		bind N  quit
		bind n  quit
		
		bind esc "context main"
		bind any unbound
		
	context spellcheck
		helptext "Spellchecking|   |Space| next node |ESC| cancel |F6,Return| confirm changes"
		
		bind space "go recurse"
		bind ..    spell
		
		bind down "go recurse"
		bind ..   spell
		
		bind up   "go backrecurse"
		bind ..   spell
		
		bind return "context main"
		bind f6 "context main"
		
		bind esc restore_state
		bind .. "context main"
		
		bind any unbound

	context grab
		helptext "Node grabbed |  |return| |space| drop here || |ESC| cancel"
		bind esc    restore_state
		bind ..     "context main"
		bind return "context main"
		bind space  "context main"
		bind left   "movenode left"
		bind right  "movenode right"
		bind up     "movenode up"
		bind down   "movenode down"
		bind any    unbound

	context export
		helptext "Export |  | A |scii || | H |tml  html| C |ss  | P |ostscript  | O |PML  |ESC| cancel "
			macro define m_export_ascii
				save_state
				go root
				getquery 'Save to ASCII file:'
				export_ascii '$query'
				restore_state
				context main
			end
			macro define m_export_html
				save_state
				go root
				getquery 'Save to HTML file:'
				export_html '$query'
				context main
				restore_state
			end
			macro define m_export_htmlcss
				save_state
				go root
				getquery 'Save to HTML/CSS file:'
				export_htmlcss '$query'
				context main
				restore_state
			end
			macro define m_export_opml
				save_state
				go root
				getquery 'Save to OPML file:'
				export_opml '$query'
				context main
				restore_state
			end
			macro define m_export_ps
				save_state
				go root
				getquery 'Save to PostScript file:'
				export_ps '$query'
				context main
				restore_state
			end
		bind esc "context main"
		bind A	"macro m_export_ascii"
		bind a	"macro m_export_ascii"
		bind H  "macro m_export_html"
		bind h  "macro m_export_html"
		bind C  "macro m_export_htmlcss"
		bind c  "macro m_export_htmlcss"
		bind O  "macro m_export_opml"
		bind o  "macro m_export_opml"
		bind P  "macro m_export_ps"
		bind p  "macro m_export_ps"
		bind any unbound
	context export_branch
		helptext "Export branch: |  | A |scii || | H |tml  html| C |ss  | P |ostscript  | O |PML  |ESC| cancel "
			macro define m_export_ascii_branch
				getquery 'Export branch to ASCII file:'
				export_ascii_branch '$query'
				context main
			end
			macro define m_export_html_branch
				getquery 'Export branch to HTML file:'
				export_html '$query'
				context main
			end
			macro define m_export_htmlcss_branch
				getquery 'Export branch to HTML/CSS file:'
				export_htmlcss '$query'
				context main
			end
			macro define m_export_opml_branch
				getquery 'Export branch to OPML file:'
				export_opml_branch '$query'
				context main
			end
			macro define m_export_ps_branch
				getquery 'Export branch to PostScript file:'
				export_ps '$query'
				context main
			end
		bind esc "context main"
		bind A	"macro m_export_ascii_branch"
		bind a	"macro m_export_ascii_branch"
		bind H  "macro m_export_html_branch"
		bind h  "macro m_export_html_branch"
		bind C  "macro m_export_htmlcss_branch"
		bind c  "macro m_export_htmlcss_branch"
		bind O  "macro m_export_opml_branch"
		bind o  "macro m_export_opml_branch"
		bind P  "macro m_export_ps_branch"
		bind p  "macro m_export_ps_branch"
		bind any unbound
	context import
		helptext "Import |  | A |scii | O |PML  | H |hnb   |ESC| cancel "
		
		bind esc "context main"
		bind A 'getquery "Import ASCII from:"'
			bind .. 'import_ascii "$query"'
			bind .. 'context main'
		bind a 'getquery "Import ASCII from:"'
			bind .. 'import_ascii "$query"'
			bind .. 'context main'
		bind O 'getquery "Import OPML from:"'
			bind .. 'import_opml "$query"'
			bind .. 'context main'
		bind o 'getquery "Import OPML from:"'
			bind .. 'import_opml "$query"'
			bind .. 'context main'
		bind H 'getquery "Import HNB data from:"'
			bind .. 'import_hnb "$query"'
			bind .. 'context main'
		bind h 'getquery "Import HNB data from?:'
			bind .. 'import_hnb "$query"'
			bind .. 'context main'
		
		bind any unbound

	context search
		helptext "Searching |  |ESC| cancel || | n |ext || | p |revious || |space|/|return| go"
		bind down   'search -f "$query"'
		bind up     'search -b "$query"'
		bind P      'search -b "$query"'
		bind p      'search -b "$query"'
		bind n      'search -f "$query"'
		bind N      'search -f "$query"'
		
		bind return "context main"
		
		bind esc    "context main"
		bind ..     restore_state
		
		bind any    unbound
		
	context user_ispell
		helptext "Language for ispell: | |F1| Br.english  |F2| Am.english  |F3| Norwegian bokm√•l  |F4| Norwegian nynorsk"
		bind f1  'spell_command "ispell -x -damerican"'
		bind ..  'context main'
		
		bind f2  'spell_command "ispell -x -dbritish"'
		bind ..  'context main'
		
		bind f3  'spell_command "ispell -x -dbokm√•l"'
		bind ..  'context main'
		
		bind f4  'spell_command "ispell -x -dnynorsk"'
		bind ..  'context main'
		
		bind esc 'context main'
		bind any unbound
		
	context user_browser
		helptext "Browser action: | |F1| w3m replace hnb  |F2| w3m in rxvt  |F3| Opera, new tab  |F4| Mozilla new window"
		bind f1 'browser_command "w3m *"'
		bind .. 'context main'
		
		bind f2 'web_commend "xterm -T \"w3m spawned from hnb\" -fn fixed -rv +sb -e w3m * > /dev/null 2>&1 &"'
		bind .. 'context main'
		
		bind f3 'web_command "opera -remote 'openURL(*,new-window)' > /dev/null 2>&1 &"'
		bind .. 'context main'
		
		bind f4 'web_command "mozilla -remote 'openURL(*,new-window)'	> /dev/null 2>&1 &"'
		bind .. 'context main'
		
		bind esc 'context main'
		bind any unbound
		
	# export through XSLT
	context export_xslt
		helptext "Export -> XSLT |  | G |roff -ms || | M |arkdown || |ESC| cancel"
			
			macro define x_xslt_groffms
				temp_str "/usr/local/share/tines/hnb2ms.xsl"
				# temp_str "/usr/local/share/xslt/hnb2ms.xsl"
				# temp_str "/Library/XSLT/hnb2ms.xsl"
				# temp_str "~/Library/XSL/hnb2ms.xsl"
				getquery "Save Groff -ms to file:"
				export_hnb /tmp/tines.$pid
				system "xsltproc \"$temp_str\" /tmp/tines.$pid > \"$query\"; rm /tmp/tines.$pid"
				status "Exported and converted branch to $query."
				context main
			end
			
			macro define x_xslt_markdown
				temp_str "/usr/local/share/tines/hnb2md.xsl"
				# temp_str "/usr/local/share/xslt/hnb2md.xsl"
				# temp_str "/Library/XSLT/hnb2md.xsl"
				# temp_str "~/Library/XSL/hnb2md.xsl"
				getquery "Save Markdown to file:"
				export_hnb /tmp/tines.$pid
				system "xsltproc \"$temp_str\" /tmp/tines.$pid > \"$query\"; rm /tmp/tines.$pid"
				status "Exported and converted branch to $query."
				context main
			end
			
			bind esc "context main"
			bind G "macro x_xslt_groffms"
			bind g "macro x_xslt_groffms"
			bind M "macro x_xslt_markdown"
			bind m "macro x_xslt_markdown"
			bind any unbound
			
	##### key related options
		##### escdelay
			# how long the program should wait before accepting that ESC(27d) is the
			# ESC key and not the start of an escape sequence
			# increase this number if you are using hnb over a slow network link
			# value given is in ms (1/1000seconds)
			#
			escdelay 100
##### menu definition
	##### file
		menu "File" "-------------" ""
		menu "File" "Save       ^S" "save"
		menu "File" "Save As...   " "macro saveas"
			macro define saveas
				getquery 'Save file as:'
				save_state
				go root
				export_$format '$query'
				restore_state
			end
			macro define savebranch
				getquery 'Save branch as:'
				save_state
				export_$format_branch '$query'
				restore_state
			end
		menu "File" "Revert       " "revert"
		menu "File" "-------------" ""
		menu "File" "Import     ^L" "context import"
		menu "File" "Export     ^E" "context export"
		menu "File" "Export Branch" "context export_branch"
		menu "File" "Export->XSLT " "context export_xslt"
		menu "File" "-------------" ""
		menu "File" "Spell Chk  F6" "macro m_spellcheck"
		menu "File" "Statistics   " "macro stats"
			macro define stats
				status "file: \"$db_file\" format: $format"
				mem
				stats
			end
		menu "File" "-------------" ""
		menu "File" "Suspend    ^Z" "stop"
		menu "File" "Exit       ^Q" "context quitsave"
	##### edit
		menu "Edit" "---------" ""
		menu "Edit" "Copy   ^C" "copy"
		menu "Edit" "Cut    ^X" "cut"
		menu "Edit" "Paste  ^V" "paste"
		menu "Edit" "---------" ""
		menu "Edit" "Search ^F" "macro m_search"
	##### entry
		menu "Entry" "----------------" ""
		menu "Entry" "Edit      return" "edit"
		menu "Entry" "Delete       del" "remove"
		menu "Entry" "----------------" ""
		menu "Entry" "Indent         >" "indent"
		menu "Entry" "Outdent        <" "outdent"
		menu "Entry" "Toggle Todo   ^T" "toggle_todo"
		menu "Entry" "Toggle Done   ^D" "toggle_done"
		menu "Entry" "Toggle Text   F3" "toggle_text"
		menu "Entry" "Show Attributes " "att_list"
		menu "Entry" "Edit _note... ^N" "macro edit_note"
			macro define edit_note
				getquery "Set _note to:"
				att_set "_note" "$query"
			end
		menu "Entry" "----------------" ""
		menu "Entry" "Expand         +" "expand"
		menu "Entry" "Collapse       -" "collapse"
		menu "Entry" "Expand Subtree  " "expand --subtree"
		menu "Entry" "Collapse Subtree" "collapse --subtree"
		menu "Entry" "Expand All      " "expand --all"
		menu "Entry" "Collapse All    " "collapse --all"
	##### Planner
		Planner macros
			macro define pl_new_act
				add "Next Actions: "
				go bottom
				add "Action..."
				go down
				movenode right
				toggle_todo
			end
			macro define pl_new_proj
				add "Project: "
				go bottom
				toggle_todo
				add "Objective: "
				go down
				movenode right
				add "Actions..."
				go down
				toggle_todo
			end
			macro define pl_new_wait
				add "Waiting For: "
				go bottom
				add "Items..."
				go down
				movenode right
				toggle_todo
			end
			macro define pl_add_cal
				getquery "Month (1-12)"
				temp_str $query
				getquery "Year (4 digits)"
				insert_cal $temp_str $query
			end
			macro define pl_add_yr
				getquery "Year (4 digits)"
				add "$query Calendar"
				go bottom
				insert_below
				movenode right
				insert_cal 12 $query
				insert_cal 11 $query
				insert_cal 10 $query
				insert_cal 9 $query
				insert_cal 8 $query
				insert_cal 7 $query
				insert_cal 6 $query
				insert_cal 5 $query
				insert_cal 4 $query
				insert_cal 3 $query
				insert_cal 2 $query
				insert_cal 1 $query
				# remove blank node at top
				go top
				remove
			end
		menu "Planner" "----------------" ""
		menu "Planner" "New Actions List" "macro pl_new_act"
		menu "Planner" "New Waiting List" "macro pl_new_wait"
		menu "Planner" "New Project List" "macro pl_new_proj"
		menu "Planner" "Add Month...    " "macro pl_add_cal"
		menu "Planner" "Add Year...     " "macro pl_add_yr"
	##### level
		menu "Level" "------------" ""
		menu "Level" "Sort      ^S" "sort -a"
		menu "Level" "Sort (desc.)" "sort -d"
		menu "Level" "Shuffle     " "sort -r"
#####
	context main
	macro define m_about
		status "Tines - an outliner, planner, organizer, and notebook"
		status "(c) 2015-2017 Larry Kollar (lkollar@gmail.com)"
		status "Using OPML configuration file."
	end
	
	macro m_about
# vim: ts=4 sw=4
